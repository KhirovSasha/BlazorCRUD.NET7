@page "/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>Products</h3>


<div class="btn-toolbar">
    <div class="btn-group mr-2">
        <div class="input-group">
            <input class="form-control" type="text" @bind-value="searchTerm" />
        </div>
        <button @onclick="Search" class="btn btn-secondary">Search</button>
    </div>
    @if (products.Count != ProductService.Products.ToList().Count)
    {
        <div class="pl-4">
            <button @onclick="Refresh" class="btn btn-secondary ">Refresh</button>
        </div>
    }
</div>
 

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
        {
            <tr>
                <td>@product.Title</td>
                <td>@product.Category</td>
                <td>@product.Price</td>
                <td>
                    <button class="btn btn-primary"
                        @onclick="(()=> ShowProduct(product.Id))">
                        <i class="oi oi-pencil"></i>  
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" 
        @onclick="CreateNewProduct">
    Create New Product
</button>

@code {

    private string? searchTerm;

    private List<BlazorCRUD.Shared.Product>? products;

    private void Search()
    {
        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            products = ProductService.Products.Where(p => p.Title.ToLower().Contains(searchTerm.ToLower())).ToList();
        }
        else
        {
            products = ProductService.Products.ToList();
        }

    }

    private void Refresh()
    {
        searchTerm = null;
        Search();
    }

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();
        products = ProductService.Products.ToList();
    }

    void ShowProduct(int id)
    {
        NavigationManager.NavigateTo($"product/{id}");
    }

    void CreateNewProduct()
    {
        NavigationManager.NavigateTo("/product");
    }
}
